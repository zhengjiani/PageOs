def f(args_in):
    return args_in
def add_tests(generator):
    def class_decorator(cls):
        """Add tests to 'cls' generated by 'generator()'"""
        for f,item in generator():
            test = lambda self, opt=item,f=f: f(self,opt)
            test.__name__ = "test_%s_%d" % (f.__name__,item['idx'])
            setattr(cls,test.__name__,test)
        return cls
    return class_decorator
def _test_pairs():
    testlist = ['data']
# class CaseAll(UnitTestcase):
#     pass
# add_tests(_test_pairs)(CaseAll)